FROM php:8.1-fpm AS wegro-agent-base-php-fpm-81

# PHP_CPPFLAGS are used by the docker-php-ext-* scripts
ENV PHP_CPPFLAGS="$PHP_CPPFLAGS -std=c++11"

# Set working directory
WORKDIR /var/www

# Add docker php ext repo
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install php extensions
RUN chmod +x /usr/local/bin/install-php-extensions && sync && \
    install-php-extensions mbstring pdo_mysql zip exif pcntl gd memcached calendar

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jpegoptim optipng pngquant gifsicle \
    unzip \
    git \
    curl \
    lua-zlib-dev \
    libmemcached-dev \
    nginx \
    cron

# Install supervisor
RUN apt-get install -y supervisor

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN pecl install mongodb && docker-php-ext-enable mongodb
# RUN echo "extension=mongodb.so" >> /usr/local/etc/php/conf.d/mongodb.ini
RUN pecl install apfd && docker-php-ext-enable apfd
RUN pecl install -o -f redis && rm -rf /tmp/pear && docker-php-ext-enable redis

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy code to /var/www
COPY --chown=www:www-data . /var/www

RUN touch /var/www/storage/logs/laravel.log && chmod 777 /var/www/storage/logs/laravel.log
RUN chown www:www-data /var/www/storage/logs/laravel.log

# add root to www group
RUN chmod -R ug+w /var/www/storage

# PHP Error Log Files
RUN mkdir /var/log/php
RUN touch /var/log/php/errors.log && chmod 777 /var/log/php/errors.log

# PHP CONFIGURATION
COPY ./docker/php/local.ini /usr/local/etc/php/conf.d/local.ini
# OPCACHE CONFIGURATION
COPY ./docker/php/conf.d/opcache.ini /usr/local/etc/php/conf.d/opcache.ini
# PHP-FPM CONFIGURATION
COPY ./docker/php/conf.d/www.production.conf /usr/local/etc/php-fpm.d/www.conf
# NGINX CONFIGURATION
COPY ./docker/nginx/conf.d/nginx.conf /etc/nginx/nginx.conf
COPY ./docker/nginx/conf.d/nginx-prod.conf /etc/nginx/sites-enabled/default

# SUPERVISOR
# CURRENTLY NO NEED TO RUN HORIZON FOR PARTNER PROJECT
# COPY ./docker/supervisor/conf.d/horizon.conf /etc/supervisor/conf.d/horizon.conf

# MAKE FPM LOG SCRIPT EXECUTABLE
COPY ./docker/fpm_log_file_created.sh /etc/fpm_log_file_created.sh
RUN chmod +x /etc/fpm_log_file_created.sh
RUN /etc/fpm_log_file_created.sh

# CORN ENABLE AND CONFIGURATION
COPY ./docker/laravel-cron /etc/cron.d/laravel-cron
RUN chmod 0644 /etc/cron.d/laravel-cron
RUN crontab /etc/cron.d/laravel-cron

COPY ./docker/entrypoint.sh /etc/entrypoint.sh
RUN chmod +x /etc/entrypoint.sh

RUN composer install --optimize-autoloader --no-dev && rm -rf /home/www-data/.composer/cache

EXPOSE 80 443

ENTRYPOINT ["/etc/entrypoint.sh"]
